package main

import (
	"context"
	"github.com/joho/godotenv"
	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"
	"net/http/httputil"
	"net/url"
	"{{workDir}}/pkg/logger"
	"time"
)

func main() {
	// Context deadline
	_, cancel := context.WithTimeout(context.Background(), 1*time.Minute)
	defer cancel()

	// Load .env file
	if err := godotenv.Load(); err != nil {
		logger.MakeLogEntry(nil).Panic("Failed to load .env: ", err)
	}

	e := echo.New()

	e.Use(middleware.Recover())
	e.Use(middleware.CORS())

	// Configuration echo
	e.HideBanner = true
	e.HidePort = true

    // Add service example
	// authSvc, _ := url.Parse("http://localhost:8081")
	// authProxy := httputil.NewSingleHostReverseProxy(authSvc)
	// e.Any("/<prefix>/*", echo.WrapHandler(authProxy))

	address := ":8080"
	logger.MakeLogEntry(nil).Info("Gateway started on address ", address)

	if err := e.Start(address); err != nil {
		logger.MakeLogEntry(nil).Panic(err)
	}
}
